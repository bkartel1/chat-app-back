# Language setting
language: node_js

# Version number
node_js:
  - 7.4.0

branches:
  only:
    - master

services:
  - postgres

env:
  global:
    - NODE_ENV=continous_integration
    # Docker hub repo
    - secure: f/ht/HAJuLYW/FaHG9CGbipNSlTY/PyJKaAsU7NHxQYShgSov+MwZhHJtqhh8qjxQ5/2xCplMQDMA0v2n2cBjm79ihlV8D203a7JmsY0DC6kGmOpYfE0Ky8Y2sVZGEFP4uQkiSTFX4aeC31MfgJKeHvQnsE1t5guuVIsJQYo7qy69LMYV36u1tGUdgapdEQlclo9V1QFZ88kFSALs4XXZy3RjOil7fYne+MR0RBrln6LndzFMYBj+swOvtwv3iAmiHHEnwoIbexbI0Be/C7INwdJEabh/rsgePgA3mk5wLP5S8IS7BR/4kNbxK1mBjwfzKb4nZmf4cIX4wVRknjFfA==
    # PG username
    - secure: IKXuVIeyJfx0aLHGVSLXPBmcgQEITcJGYKZAxjw9PjPg4bk/CN3hJbGUIBadWNtCXrBgwjru3d22gYuC7kaolRuC+NfTOU8tFEPFiMEuF+dnLYeP3z7d5N9BxKN+QtPmZYg3Q4itkkgxxLN33PxIXm1so/PpwouFqo613Cbpr7/jRjEBzu4Ub2HoireAHadKoiRJv0e+bobO3m/yypeezO1WG85Ws294zhn9hY6LEJTP+IMYCWxGTIv6DysyB5tMYr07GKxHpA7WnnvpKWOLPwm/txHt4R0UV3mZjSh21rBPudurXC2pz8n70zb2RS4Xa1xNf4hOLqqy6+zRgqWF5A==
    # PG db name
    - secure: SDtUK72EhFe0Acg3gZCqTGRK8hNX/NguZjfW2czQSmNfTNVjpwt6ZBfE+aHYNHz5rkzX/FhKPhJsY40ssHaBoSQKSWYacTfKRdGE8ORFgbSBpNqANrtVGutn1j/T8J2BEM6VZKl2uNpvGXpwLLz8XlEM6CWerOPmjOvsTZ/pKTj9AN4I/eFEHNDfPRK4t3reOomKucp8P1gzBXXbeF9kJJIKEE9M92BDyLVC2CTJ/IBCLHMcAd3f94kJT2zCgwgiwcSIb5tRsfV8WZ40RiwtiUnGLcuViPwa6nUkXnNsLSV2CEZuJj+30wzDXLi0Y9JlT6UNKlG0k8VmOlx5zdahAg==
build:
  ci:
    # Specific version is used to avoid issues due to version differencies
    - npm install npm@5.3.0 -g
    - npm -v
    - npm install
    - psql -c 'create role ${POSTGRES_USER} with superuser;' -U postgres
    - psql -c 'create database ${POSTGRES_DB};' -U postgres
    - npm run test:ci

  on_success:
    - docker build -f Dockerfile.prod -t $DOCKER_HUB_REPO:$BUILD_NUMBER .
    - docker push $DOCKER_HUB_REPO:$BUILD_NUMBER

integrations:
  hub:
    - integrationName: DockerRegistryIntegration
      type: dockerRegistryLogin

  notifications:
    - integrationName: email
      type: email
      on_success: never
      on_failure: never
      on_pull_request: never
